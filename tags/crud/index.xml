<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>crud on Jimmy 's Code</title><link>/tags/crud/</link><description>Recent content in crud on Jimmy 's Code</description><generator>Hugo -- gohugo.io</generator><language>zh-tw</language><copyright>Copyright © 2022-{year} Jimmy Fang. All Rights Reserved.</copyright><lastBuildDate>Sun, 04 Nov 2018 13:34:16 +0000</lastBuildDate><atom:link href="/tags/crud/index.xml" rel="self" type="application/rss+xml"/><item><title>Laravel 使用心得:用laravel 做一個超簡單的文章CRUD</title><link>/posts/laravel-%E4%BD%BF%E7%94%A8%E5%BF%83%E5%BE%97%E7%94%A8laravel-%E5%81%9A%E4%B8%80%E5%80%8B%E8%B6%85%E7%B0%A1%E5%96%AE%E7%9A%84%E6%96%87%E7%AB%A0crud/</link><pubDate>Sun, 04 Nov 2018 13:34:16 +0000</pubDate><guid>/posts/laravel-%E4%BD%BF%E7%94%A8%E5%BF%83%E5%BE%97%E7%94%A8laravel-%E5%81%9A%E4%B8%80%E5%80%8B%E8%B6%85%E7%B0%A1%E5%96%AE%E7%9A%84%E6%96%87%E7%AB%A0crud/</guid><description>最近因為工作，嘗試使用Laravel 更新我目前手上的專案網站。恩&amp;hellip;&amp;hellip;這陣子使用心得有二
(1) 真的好好用阿
(2) laravel 真是博大精深，因為用一套framwork 就要跟隨那一套framework的規則走，有時候都覺得laravel 怎麼可以設計得這麼活!!! 原來還可以這樣寫XDDD
關於小弟的PHP旅程 小弟一開始，是認識到CMS，從而知道當時算是CMS界的霸主(不知道現在還是不是XD)–WordPress! 當時使用著使用著，還蠻方便的!! 而不知道為甚麼，可能我真的很喜歡寫程式使然~ 記得一開始入坑是因為一支很屌的Yahoo 即時通整人程式(哈哈 超屌的!! 我都覺得厲害)，加上小弟讀資料處理科，當時學習的是Visual Basic，而且學的還不錯 ,基於被整就要整回去的「報復心態」，開始從整人程式起家&amp;hellip;&amp;hellip;.寫一些讓電腦關機、無限迴圈等等超無聊的小把戲&amp;hellip;.到了大學讀資管系，有一陣子荒廢了這部分&amp;hellip;..直到某個時候wordpress ，也不知道為甚麼的，居然開始撰寫wordpress 佈景主題，小弟寫了兩套，分別是 FangJRdesigner 和本站所使用的JimmyFDesginer 說真的，前面那一套我已經懶得更新了，或許後面這一套會持續在更新(畢竟是本站在使用的，小弟也不知道會不會有空XD) ，漸漸的，我學習及撰寫PHP 純Script 已經好一段時間，當然這段期間也因為CMS界打滾認識到Jommla 和Drupal 等用php 所寫的cms，但最後我還是選擇用Wordpress 架站。
這幾年藉由認識到Hahow 這個募資課程網站，正好有人在教Laravel ，說來也巧小弟也存了一些錢，加上早以心儀framework已久(一直苦於沒有師傅領進門以及沒有恆心毅力學習)，後來就馬上買了那門課程，在上課的過程，發現Laravel 的好用之處以及為甚麼大家都這麼推framwork~~~
但是聽得看得都比不上實際做的，說真的最近才有時間去用laravel 更新我的專案，藉由實做的過程中，漸漸得認識到底甚麼是MVC 到底甚麼樣的方式可以寫讓人看得懂得程式。 最近因為一些工作上的挫敗以及最近在學Laravel 漸漸體認到 雖然解決問題很重要，但要寫出一個讓人看得懂得程式碼及有藝術的程式碼也是很重要的!
使用Laravel 做一個超級簡單的部落格 對我來說，如同前面我寫的文章(傳送門 )，不過建議大家還是要對於php 物件導向有個簡單基礎的認識，這樣才大概比較了解我所寫的(可能也不會?!)，這裡不做太難的東西，就單純對文章的CRUD而已，以及使用者的登入登出&amp;hellip;..兩個表：User 和 Post
DB migration Laravel 的設計者真的很聰明，以前我從沒想到，原來db schema 是可以帶著走的，而且藉由env的設計，就算上傳了git 只要我不上傳真正的env(保護自己的資料)，藉由一些簡單的步驟 也可以無痛轉移! 真的超強!
首先，我們必須先新增一個migration 檔
php artisan make:migration create_post_table --create=posts
只要下了這個指令就可以做一個create db table schema，接下來你只要在database 資料夾下migrations 底下</description></item><item><title>簡單的CRUD 操作</title><link>/posts/%E7%B0%A1%E5%96%AE%E7%9A%84crud-%E6%93%8D%E4%BD%9C/</link><pubDate>Thu, 04 Oct 2018 13:28:52 +0000</pubDate><guid>/posts/%E7%B0%A1%E5%96%AE%E7%9A%84crud-%E6%93%8D%E4%BD%9C/</guid><description>緣起 我們公司最近要徵募新人，說到要給新人出怎麼樣的題目&amp;hellip;.談到出個簡單的部落格實做(包含登入登出)&amp;hellip;.說真的這個題目的範圍可大可小&amp;hellip;.對我來說就只是要考所謂CRUD的操作-就是新增-查詢-更新-刪除。於是就問我這個非常菜的菜鳥能不能在這短時間內做出來&amp;hellip;..說真的我是有點躍躍欲試&amp;hellip;於是便開啟這樣的練習&amp;hellip;.
所有程式碼都在這裡：https://github.com/r567tw/easy_blog_practice 這裡我應用了PDO的技術，並且也記錄一些筆記&amp;hellip;&amp;hellip;
Initial 1$db = new PDO($dsn, $user,$password ); Create 1$insert=$db-&amp;gt;prepare(&amp;#34;insert into posts (title,post) values (:title,:post)&amp;#34;); 2$insert-&amp;gt;bindParam(&amp;#34;:title&amp;#34;,$_POST[&amp;#39;title&amp;#39;]); 3$insert-&amp;gt;bindParam(&amp;#34;:post&amp;#34;,$_POST[&amp;#39;posts&amp;#39;]); 4$insert-&amp;gt;execute(); Review 1$sql=&amp;#34;select * from posts&amp;#34;; 2$posts=$db-&amp;gt;query($sql); 3$posts=$posts-&amp;gt;fetchAll(); Update 1$update=$db-&amp;gt;prepare(&amp;#34;update posts set title=:title,post=:post,update_time=:update where id=:id&amp;#34;); 2$update-&amp;gt;bindParam(&amp;#34;:title&amp;#34;,$_POST[&amp;#39;title&amp;#39;]); 3$update-&amp;gt;bindParam(&amp;#34;:post&amp;#34;,$_POST[&amp;#39;posts&amp;#39;]); 4$update-&amp;gt;bindParam(&amp;#34;:update&amp;#34;,date(&amp;#34;Y:m:d H:i:s&amp;#34;)); 5$update-&amp;gt;bindParam(&amp;#34;:id&amp;#34;,$_POST[&amp;#39;id&amp;#39;]); 6$update-&amp;gt;execute(); Delete 1$delete=$db-&amp;gt;prepare(&amp;#34;delete from posts where id=:id&amp;#34;); 2$delete-&amp;gt;bindParam(&amp;#34;:id&amp;#34;,$_GET[&amp;#39;id&amp;#39;]); 3$delete-&amp;gt;execute(); 判斷是否有成功執行
1$delete-&amp;gt;rowCount()&amp;gt;0 登入登出 首先必須先開啟Session
1session_start(); 當登入時必須宣告一個session的參數
1$_SESSION[index]=Value 之後就判斷這個session實數就能時做出登入登出啦
這麼簡單的東西我花了一個半小時做完~ 是不是有點久阿哈哈?
工作上學習到的小技巧 1簡單輸出成Excel的程式碼
1header(&amp;#34;Content-type:application/vnd.ms-excel&amp;#34;); header(&amp;#34;Content-Disposition:filename=filename.xls&amp;#34;); 接下來只要在此段程式碼底下宣告HTML的Table，只要打開這個網頁就會輸出Excel檔案
2.MySQL 應用CASE 子句
1SELECT count(CASE (&amp;#34;欄位名&amp;#34;) WHEN &amp;#34;條件1&amp;#34; THEN 1 ELSE NULL END) FROM &amp;#34;表格名&amp;#34;; 可以在同一條SQL查詢出來這個欄位在這個條件下所出來的個數&amp;hellip;</description></item></channel></rss>