<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>larvel on Jimmy 's Code</title><link>https://jimmycode.tw/categories/larvel/</link><description>Recent content in larvel on Jimmy 's Code</description><generator>Hugo -- gohugo.io</generator><language>zh-tw</language><copyright>Copyright © 2022 Jimmy Fang. All Rights Reserved.</copyright><lastBuildDate>Mon, 08 Aug 2022 01:33:11 +0000</lastBuildDate><atom:link href="https://jimmycode.tw/categories/larvel/index.xml" rel="self" type="application/rss+xml"/><item><title>寫一個簡單的Laravel Package</title><link>https://jimmycode.tw/posts/laravel-package/</link><pubDate>Mon, 08 Aug 2022 01:33:11 +0000</pubDate><guid>https://jimmycode.tw/posts/laravel-package/</guid><description>前言 最近突然心血來潮看到這篇 Laravel new 的 post: https://laravel-news.com/building-your-own-laravel-packages 於是起心動念開始寫一個 package來玩一玩。 詳細程式碼在這裡：https://github.com/r567tw/laravel-package-practice
首先，要有composer 既然要寫一個自己的客製package，當然要先有composer.json呀 於是讓我們先composer init起來！或者你要手動建立composer.json也是可以
總之，你composer.json 裡面的內容應該要包含以下
1{ 2 &amp;#34;name&amp;#34;: &amp;#34;{你的名稱}/{你的套件名稱}&amp;#34;, 3 &amp;#34;type&amp;#34;: &amp;#34;library&amp;#34;, 4 &amp;#34;license&amp;#34;: &amp;#34;MIT&amp;#34;, 5 &amp;#34;autoload&amp;#34;: { 6 &amp;#34;psr-4&amp;#34;: { 7 &amp;#34;{你的名稱}\\{你的套件名稱}&amp;#34;: &amp;#34;src/&amp;#34; 8 } 9 }, 10 &amp;#34;require&amp;#34;: { 11 &amp;#34;php&amp;#34;: &amp;#34;^8.1&amp;#34;, 12 &amp;#34;illuminate/support&amp;#34;: &amp;#34;^9.23&amp;#34; 13 }, 14 &amp;#34;extra&amp;#34;: { 15 &amp;#34;laravel&amp;#34;: { 16 &amp;#34;providers&amp;#34;: [ 17 &amp;#34;{你的名稱}\\{你的套件名稱}\\Providers\\PackageServiceProvider&amp;#34; 18 ] 19 } 20 } 21} extra 是給laravel 看的，laravel在某個版本之後啟用autoload service provider，「粉方便」 主要要require illuminate/support這個套件 通常我們會使用src這個資料夾，但如果你想特立獨行也是可以拉 要寫一個 serviceprovider 檔，如果之後有機會來記錄筆記一下Laravel這個service provider 這個東西，一定可以學到很多！ 寫一個service provider 我這個套件的目標很簡單，就是弄出一個artisan 的指令來helloworld一下就好，所以這邊我在src/Providers裡面建立PackageServiceProvider.</description></item><item><title>Laravel Pint 簡易教學</title><link>https://jimmycode.tw/posts/laravel-pint/</link><pubDate>Tue, 02 Aug 2022 01:33:11 +0000</pubDate><guid>https://jimmycode.tw/posts/laravel-pint/</guid><description>前言 好的工程師通常對於自己的 code 會有所在意，並思考著如何能讓程式碼更讓人好懂,好閱讀。 以及通常團隊裡也會有統一的coding-style。
在 Laravel 9 之後有個套件我覺得很有趣，它就在某個程度上就解決了這個情境 個人認為蠻值得簡介一下，叫做 Laravel Pint。
安裝 首先, 我們先安裝這個套件。
composer require laravel/pint &amp;ndash;dev
安裝完之後，你就可以使用./vendor/bin/pint這個指令了。
取得版本 1vendor/bin/pint --version 客製化 在文件裡指出，coding-style 可以被客製設定。在root 目錄建立一個叫做pint.json的檔案即可。 裡面的內容則是
1{ 2 &amp;#34;preset&amp;#34;: &amp;#34;laravel&amp;#34; 3} 這樣它就會設定 laravel 為這個專案的固定 coding-style。 如文件說明，你也可以客製底下的rule 來處理。
如果想要看的更多可以參考這裡：https://laravel.com/docs/9.x/pint
by the way: 也可以看這個影片：https://www.youtube.com/watch?v=dvxzuH2ds8A
小君曰：如何成為一個好的工程師永遠是我人生上的一大哉問。</description></item></channel></rss>