<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Side Projects on Jimmy 's Code</title><link>https://jimmycode.tw/categories/side-projects/</link><description>Recent content in Side Projects on Jimmy 's Code</description><generator>Hugo -- gohugo.io</generator><language>zh-tw</language><copyright>Copyright © 2022 Jimmy Fang. All Rights Reserved.</copyright><lastBuildDate>Sat, 02 Jul 2022 13:33:11 +0000</lastBuildDate><atom:link href="https://jimmycode.tw/categories/side-projects/index.xml" rel="self" type="application/rss+xml"/><item><title>開發個人助理Jarvis</title><link>https://jimmycode.tw/posts/jarvis/</link><pubDate>Sat, 02 Jul 2022 13:33:11 +0000</pubDate><guid>https://jimmycode.tw/posts/jarvis/</guid><description>前言 我其實是一個不太喜歡苦工的工程師，我很喜歡用程式解決我個人的生活問題。自動化最棒了！
之前有個想法希望可以買黃金，剛好看到github action 有所謂的schedule 的選項，於是我就有個大膽的想法：不如就讓line 來通知到要準備買黃金拉
專案開發 原本他只是個簡單的黃金買賣通知，結果到最後我把他寫成通知天氣預報、股票等買賣的決策系統通知了XD
或許之後還可以有更多細緻化的設定，反正他就是個超簡單的side project, 技術基於 line notify, github action 及 python。黃金、天氣與股票各由負責的python script 處理，算是有點為服務的feel 吧？
如果以後line notify 壞掉了怎麼辦？ 其實就把helpers/notify.py裡面的程式調整修改就好了，這個side project 最最最核心的程式應該就是他了，其他服務都是有各自的實作之後呼叫這裡的function 去 line notify 通知我。
1import os 2import requests 3 4def send(message): 5 token = os.getenv(&amp;#34;TOKEN&amp;#34;) 6 notify_url = &amp;#34;https://notify-api.line.me/api/notify&amp;#34; 7 8 requests.post( 9 notify_url, 10 headers={&amp;#39;Authorization&amp;#39;: &amp;#34;Bearer {}&amp;#34;.format(token)}, 11 data={&amp;#34;message&amp;#34;: message} 12 ) line notify 這個服務有夠簡單，其實就是簡單發出個POST request 就好，然後你可以去 line notify 的頁面 申請token就好。
github action 就是簡單寫一下 yaml ，我以我最自豪的黃金為例</description></item><item><title>利用Gulp 製作自己的履歷</title><link>https://jimmycode.tw/posts/%E5%88%A9%E7%94%A8gulp-%E8%A3%BD%E4%BD%9C%E8%87%AA%E5%B7%B1%E7%9A%84%E5%B1%A5%E6%AD%B7/</link><pubDate>Sun, 04 Nov 2018 13:33:11 +0000</pubDate><guid>https://jimmycode.tw/posts/%E5%88%A9%E7%94%A8gulp-%E8%A3%BD%E4%BD%9C%E8%87%AA%E5%B7%B1%E7%9A%84%E5%B1%A5%E6%AD%B7/</guid><description>之前六角學院出了一堂課程：使用 gulp 進行網頁前端自動化 ，相當推薦!
說真的，在畢業前我就大概知道gulp 的大名，自己的印象就是類似前端的工具&amp;hellip;&amp;hellip;但始終沒有特別著墨這一塊，直到我最近關注六角學院出了這門課，恰巧手上又有一些閒錢，就發憤買了這門課，藉此做為好好學習gulp的機會和理由。
Gulp 是甚麼? Gulp 在我目前的使用與理解上就是一個可以將前端工作流程(前端工程)給與&amp;quot;自動化&amp;quot;的一項工具，藉由&amp;quot;gulpfile.js&amp;quot; 定義出各式各樣的&amp;quot;工作任務&amp;quot;，加上gulp 的一些配合外掛與套件，可以進行壓縮js 和css 、scss 或搬移檔案的動作。詳情可以請問 wiki 大神甚麼是gulp 。
話不多說，先做一個簡單的範例吧，這是一個可以把html copy 到指定地方的工作任務
PS: 請先預備好工作環境，npm 還有souce 資料夾，(當然你也可以定義您的資料夾名稱)等，如果可以，再多裝個yarn (比npm還快的npm，但不是npm 請看介紹 阿 npm 只是拿來安裝yarn 的XD ) 先npm install 或者yarn install 之後在資料夾裡新增一個新檔案:gulpfile.js
說明：
接下來使用gulp 後面接你所定義的task name 即可執行，如上範例 就是在CMD Key &amp;ldquo;gulp copyHTML&amp;rdquo; ，就可以將source 資料夾裡所有.html 檔名的檔案搬到 public資料夾下(如果沒有public 他會幫你建一個!! )。
如果你只想key gulp 就可以執行也可，只要在gulpfile.js 定義gulp.task(&amp;lsquo;default&amp;rsquo;, [/後面接task 陣列/]); 就可以，如上所示就是 gulp.task(&amp;lsquo;default&amp;rsquo;, [&amp;ldquo;copyHTML&amp;rdquo;]);
當然啦，gulp 如果只能拿來做搬檔案，其實用Python 也可以阿! 幹嘛需要用gulp? gulp 真正的妙處是在可以利用各式各樣的外掛套件 多樣化並豐富前端工作，像是gulp-sass 可以將sass的檔案轉成css、用gulp-concat合併css 和js ,甚至也可以利用套件壓縮css 和js 的檔案大小、gulp-jade 更能將 jade 的檔案轉譯成.</description></item></channel></rss>